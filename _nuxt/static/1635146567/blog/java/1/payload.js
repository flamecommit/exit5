__NUXT_JSONP__("/blog/java/1", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae){return {data:[{article:{slug:"1",title:"[Java] 기타제어자",author:"신용준",date:"2021-03-01",toc:[{id:T,depth:u,text:U},{id:V,depth:u,text:W},{id:X,depth:u,text:Y},{id:Z,depth:u,text:_}],body:{type:"root",children:[{type:b,tag:v,props:{id:T},children:[{type:b,tag:s,props:{href:"#final-%EC%A0%9C%EC%96%B4%EC%9E%90",ariaHidden:w,tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:U}]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"자바에서 final 제어자는 '변경할 수 없다'는 의미로 사용됩니다."}]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"즉, 필드나 지역 변수에 사용하면 값을 변경할 수 없는 상수(constant)가 됩니다.\n또한, 클래스에 사용하면 해당 클래스는 다른 클래스가 상속받을 수 없게 됩니다.\n메소드에 사용하면 해당 메소드는 오버라이딩(overriding)을 통해 재정의를 할 수 없게 됩니다."}]},{type:a,value:d},{type:b,tag:j,props:{},children:[]},{type:a,value:d},{type:b,tag:"blockquote",props:{},children:[{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"자바에서는 상속이라는 것을 통해 다른 클래스의 private 멤버를 제외한 모든 메소드를 상속받을 수 있습니다."}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"이렇게 상속받은 메소드는 그대로 사용해도 되고, 필요한 동작을 위해 재정의하여 사용할 수도 있습니다.\n메소드 오버라이딩(method overriding)이란 상속받은 부모 클래스의 메소드를 재정의하여 사용하는 것을 의미합니다."}]},{type:a,value:d},{type:b,tag:j,props:{},children:[]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"자바에서 final 제어자를 사용할 수 있는 대상은 다음과 같습니다."}]},{type:a,value:d},{type:b,tag:C,props:{},children:[{type:a,value:d},{type:b,tag:n,props:{},children:[{type:a,value:"클래스, 메소드, 필드, 지역 변수"}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:j,props:{},children:[]},{type:a,value:d},{type:b,tag:D,props:{className:[E]},children:[{type:b,tag:F,props:{className:[G,H]},children:[{type:b,tag:I,props:{},children:[{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:J}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,K]},children:[{type:a,value:L}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:o}]},{type:a,value:m},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:$}]},{type:a,value:" VAR"},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:A}]},{type:a,value:m},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:M}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,N]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:Q}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:o}]},{type:a,value:R},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:"double"}]},{type:a,value:" MAX_NUM "},{type:b,tag:c,props:{className:[e,"operator"]},children:[{type:a,value:"="}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,"number"]},children:[{type:a,value:"10.2"}]},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:A}]},{type:a,value:m},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:p}]},{type:a,value:d},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:p}]},{type:a,value:d}]}]}]},{type:a,value:d},{type:b,tag:j,props:{},children:[]},{type:a,value:d},{type:b,tag:v,props:{id:V},children:[{type:b,tag:s,props:{href:"#static-%EC%A0%9C%EC%96%B4%EC%9E%90",ariaHidden:w,tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:W}]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"자바에서 static 제어자는 '공통적인'이라는 의미로 사용됩니다."}]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"즉, static 제어자를 변수에 사용하면 해당 변수를 클래스 변수로 만들어 줍니다.\n또한, 메소드에 사용하면 해당 메소드를 클래스 메소드로 만들어 줍니다.\n이러한 static 제어자는 초기화 블록에도 사용할 수 있습니다."}]},{type:a,value:d},{type:b,tag:j,props:{},children:[]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"static 제어자를 가지는 멤버는 다음과 같은 특징을 가지게 됩니다."}]},{type:a,value:d},{type:b,tag:aa,props:{},children:[{type:a,value:d},{type:b,tag:n,props:{},children:[{type:a,value:"프로그램 시작시 최초에 단 한 번만 생성되고 초기화됩니다."}]},{type:a,value:d},{type:b,tag:n,props:{},children:[{type:a,value:"인스턴스를 생성하지 않고도 바로 사용할 수 있게 됩니다."}]},{type:a,value:d},{type:b,tag:n,props:{},children:[{type:a,value:"해당 클래스의 모든 인스턴스가 공유합니다."}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:j,props:{},children:[]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"자바에서 static 제어자를 사용할 수 있는 대상은 다음과 같습니다."}]},{type:a,value:d},{type:b,tag:C,props:{},children:[{type:a,value:d},{type:b,tag:n,props:{},children:[{type:a,value:"메소드, 필드, 초기화 블록"}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:j,props:{},children:[]},{type:a,value:d},{type:b,tag:D,props:{className:[E]},children:[{type:b,tag:F,props:{className:[G,H]},children:[{type:b,tag:I,props:{},children:[{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:J}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,K]},children:[{type:a,value:L}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:o}]},{type:a,value:m},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:B}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:$}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:"var"}]},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:A}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,q]},children:[{type:a,value:"\u002F\u002F 클래스 필드(static 변수)"}]},{type:a,value:m},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:B}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,q]},children:[{type:a,value:"\u002F\u002F static 초기화 블록"}]},{type:a,value:R},{type:b,tag:c,props:{className:[e,q]},children:[{type:a,value:"\u002F\u002F 보통 클래스 필드의 초기화를 진행함"}]},{type:a,value:m},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:p}]},{type:a,value:m},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:B}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:M}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,N]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:Q}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,q]},children:[{type:a,value:"\u002F\u002F 클래스 메소드(static 메소드)"}]},{type:a,value:R},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:S}]},{type:a,value:m},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:p}]},{type:a,value:d},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:p}]},{type:a,value:d}]}]}]},{type:a,value:d},{type:b,tag:j,props:{},children:[]},{type:a,value:d},{type:b,tag:v,props:{id:X},children:[{type:b,tag:s,props:{href:"#abstract-%EC%A0%9C%EC%96%B4%EC%9E%90",ariaHidden:w,tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:Y}]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"자바에서 abstract 제어자는 '추상적인'이라는 의미로 사용됩니다."}]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"선언부만 있고 구현부가 없는 메소드를 추상 메소드라 하며, 반드시 abstract 제어자를 붙여야 합니다.\n또한, 하나 이상의 추상 메소드가 포함하고 있는 추상 클래스도 반드시 abstract 제어자를 붙여야 합니다."}]},{type:a,value:d},{type:b,tag:j,props:{},children:[]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"자바에서 abstract 제어자를 사용할 수 있는 대상은 다음과 같습니다."}]},{type:a,value:d},{type:b,tag:C,props:{},children:[{type:a,value:d},{type:b,tag:n,props:{},children:[{type:a,value:"클래스, 메소드"}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:j,props:{},children:[]},{type:a,value:d},{type:b,tag:D,props:{className:[E]},children:[{type:b,tag:F,props:{className:[G,H]},children:[{type:b,tag:I,props:{},children:[{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:ab}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:J}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,K]},children:[{type:a,value:L}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:o}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,q]},children:[{type:a,value:"\u002F\u002F 추상 클래스"}]},{type:a,value:m},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:ab}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:M}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,N]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:A}]},{type:a,value:f},{type:b,tag:c,props:{className:[e,q]},children:[{type:a,value:"\u002F\u002F 추상 메소드"}]},{type:a,value:d},{type:b,tag:c,props:{className:[e,g]},children:[{type:a,value:p}]},{type:a,value:d}]}]}]},{type:a,value:d},{type:b,tag:j,props:{},children:[]},{type:a,value:d},{type:b,tag:v,props:{id:Z},children:[{type:b,tag:s,props:{href:"#%EC%A0%9C%EC%96%B4%EC%9E%90%EC%9D%98-%EC%A1%B0%ED%95%A9",ariaHidden:w,tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:_}]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"자바에서는 접근 제어자와 기타 제어자를 한 대상에 함께 사용할 수 있습니다.\n하지만 모든 경우가 가능한 것은 아니며, 대상에 따라 사용할 수 있는 조합은 다음과 같습니다."}]},{type:a,value:d},{type:b,tag:j,props:{},children:[]},{type:a,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:b,tag:"table",props:{},children:[{type:b,tag:"thead",props:{},children:[{type:b,tag:r,props:{},children:[{type:b,tag:ac,props:{align:k},children:[{type:a,value:"대상"}]},{type:b,tag:ac,props:{align:k},children:[{type:a,value:"함께 사용할 수 있는 제어자"}]}]}]},{type:b,tag:"tbody",props:{},children:[{type:b,tag:r,props:{},children:[{type:b,tag:l,props:{align:k},children:[{type:a,value:"클래스"}]},{type:b,tag:l,props:{align:k},children:[{type:a,value:"public, (default), final, abstract"}]}]},{type:b,tag:r,props:{},children:[{type:b,tag:l,props:{align:k},children:[{type:a,value:"메소드"}]},{type:b,tag:l,props:{align:k},children:[{type:a,value:"모든 접근 제어자, final, static, abstract"}]}]},{type:b,tag:r,props:{},children:[{type:b,tag:l,props:{align:k},children:[{type:a,value:"필드"}]},{type:b,tag:l,props:{align:k},children:[{type:a,value:"모든 접근 제어자, final, static"}]}]},{type:b,tag:r,props:{},children:[{type:b,tag:l,props:{align:k},children:[{type:a,value:"지역 변수"}]},{type:b,tag:l,props:{align:k},children:[{type:a,value:t}]}]},{type:b,tag:r,props:{},children:[{type:b,tag:l,props:{align:k},children:[{type:a,value:"초기화 블록"}]},{type:b,tag:l,props:{align:k},children:[{type:a,value:B}]}]}]}]},{type:a,value:d},{type:b,tag:j,props:{},children:[]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"또한, 자바에서는 제어자의 특성상 몇몇 제어자는 함께 사용할 수 없습니다."}]},{type:a,value:d},{type:b,tag:aa,props:{},children:[{type:a,value:d},{type:b,tag:n,props:{},children:[{type:a,value:"클래스에 final과 abstract는 함께 사용할 수 없습니다."}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"final 제어자를 가지는 클래스는 다른 클래스가 상속받을 수 없게 되며, abstract 제어자를 가지는 클래스는 다른 클래스가 상속해서 오버라이딩해야만 사용할 수 있으므로, 이 두 제어자는 클래스에 함께 사용할 수 없습니다.\n2. 메소드에 static과 abstract는 함께 사용할 수 없습니다.\nabstract 제어자를 가지는 메소드는 선언부만 있고 구현부가 없는 메소드인데, static 제어자를 가지는 메소드는 인스턴스를 생성하지 않고도 바로 사용할 수 있어야 하므로, 이 두 제어자는 메소드에 함께 사용할 수 없습니다.\n3. 메소드에 private과 abstract는 함께 사용할 수 없습니다.\nabstract 제어자를 가지는 메소드는 다른 클래스가 상속하여 오버라이딩해야만 사용할 수 있는데, private 제어자를 가지는 메소드는 자식 클래스에서 접근할 수 없게 되므로, 이 두 제어자는 메소드에 함께 사용할 수 없습니다.\n4. 메소드에 private과 final은 함께 사용할 필요가 없습니다.\n메소드에 사용된 final 제어자와 private 제어자는 모두 해당 메소드가 오버라이딩을 통한 재정의를 할 수 없다는 의미를 가지므로, 둘 중에 하나만 사용해도 의미가 충분히 전달될 수 있습니다."}]},{type:a,value:d},{type:b,tag:j,props:{},children:[]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"출처 : "},{type:b,tag:s,props:{href:ad,rel:["nofollow","noopener","noreferrer"],target:"_blank"},children:[{type:a,value:ad}]}]}]},dir:"\u002Fjava",path:"\u002Fjava\u002F1",extension:".md",createdAt:ae,updatedAt:ae}}],fetch:{"data-v-52afa196:0":{directory_list:["java","react","vue"]}},mutations:[]}}("text","element","span","\n","token"," ","punctuation","keyword","p","br","left","td","\n    ","li","{","}","comment","tr","a","final",2,"h2","true",-1,"icon","icon-link",";","static","ul","div","nuxt-content-highlight","pre","language-java","line-numbers","code","class","class-name","Car","void","function","brake","(",")","\n        ",".","final-제어자","final 제어자","static-제어자","static 제어자","abstract-제어자","abstract 제어자","제어자의-조합","제어자의 조합","int","ol","abstract","th","http:\u002F\u002Fwww.tcpschool.com\u002Fjava\u002Fjava_modifier_ectModifier","2021-10-25T07:21:40.948Z")));